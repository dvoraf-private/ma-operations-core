let express,config,mongoose;_3d9‍.x([["App",()=>App]]);_3d9‍.w("express",[["default",["express"],function(v){express=v}]]);_3d9‍.w("dotenv",[["config",["config"],function(v){config=v}]]);_3d9‍.w("mongoose",[["*",null,function(v){mongoose=v}]]);




       class App{

    static async initDb(){
        return new Promise((resolve, reject) => {
            mongoose.connect(`${process.env.MONGODB_URI}`, {
                useNewUrlParser: true,
                useFindAndModify: false,
                useCreateIndex: true,
            }).catch(() => { /* catch handled in once('error') */ })

            mongoose.connection.once('error', (err) => { reject(err) })
            mongoose.connection.once('open', resolve)
        })
    }

    static async initWebServer(){
        const app = express()
        const PORT = process.env.PORT || "8000"

        // app.use(bodyParser.json())
        // app.use(bodyParser.urlencoded({ extended: true }))

        app.listen(PORT, () => console.log(`app listening on port ${PORT}`))


    }

    static async start(){
        config()

       await this.initDb()

       await this.initWebServer()

    }


}